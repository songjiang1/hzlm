
@{
    ViewBag.Title = "系统功能";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<div class="layui-fluid">
    <div class="layui-card">
        @*<div class="layui-form layui-card-header layuiadmin-card-header-auto">
            <div class="layui-form-item">
                <div class="layui-inline">
                    筛选
                </div>
                <div class="layui-inline">
                    <select name="rolename" lay-filter="LAY-user-adminrole-type">
                        <option value="-1">全部角色</option>
                        <option value="0">管理员</option>
                    </select>
                </div>
            </div>
        </div>*@
        <div class="layui-card-body">

            <div id="toolbar" style="padding-bottom: 10px;">
                <a class="layui-btn layui-btn-sm" lay-event="add"><i class="layui-icon layui-icon-add-1"></i>添加</a>
                <a class="layui-btn layui-btn-sm layui-btn-normal" lay-event="edit"><i class="layui-icon layui-icon-edit"></i>编辑</a>
                <a class="layui-btn layui-btn-sm layui-btn-danger" lay-event="delete"><i class="layui-icon layui-icon-delete"></i>删除</a>
            </div> 
            <table class="layui-table layui-form" id="tree-table"   lay-size="sm"></table>

        </div>
    </div>
</div>
<script type="text/javascript">
    layui.extend({
        treeTable: '/lib/layui-extend/tableTree/treeTable'
    }).use(['treeTable', 'layer', 'code', 'form'], function () {
        var o = layui.$,
            form = layui.form,
            layer = layui.layer,
            treeTable = layui.treeTable;
        var re = treeTable.render({
            elem: '#tree-table',
            url:"/SystemManage/Module/GetListJson",
            icon_key: 'name',
            is_checkbox: true,
            end: function (e) {
                form.render();
            }
           ,toolbar: '#toolbar',
            defaultToolbar: ['filter', 'exports', 'print', {
                title: '帮助'
                , layEvent: 'LAYTABLE_TIPS'
                , icon: 'layui-icon-tips'
            }],
            cols: [
                { key: 'name', title: '名称',  width: '100px', },
                {  key: 'code',  title: '编码',  width: '100px',},
                { key: 'url_address',title: '导航地址',width: '100px',},
                {key: 'target', title: '导航目标', width: '100px', align: '',   },
                {   title: '菜单',  width: '100px',   align: '',
                    template: function (item) { 
                         return `<input type="checkbox" name="is_menu" title="菜单"  ${item.is_menu?"checked":""}>`;
                    
                    }
                },
                {  title: '启用状态', width: '100px',align: '',
                    template: function (item) {
                        debugger;
                        return `<input type="checkbox" name="is_enabled" lay-skin="switch" lay-text="启用|禁用" ${item.is_enabled?"checked":""}>`;
                    }
                },
                //{
                //    title: '操作',
                //    align: 'center',
                //    template: function (item) {
                //        return '<a lay-filter="add">添加</a> | <a target="_blank" href="/detail?id=' + item.id + '">编辑</a>';
                //    }
                //}
            ]
        });
         
       
        // 监听checkbox选择
        treeTable.on('tree(box)', function (data) {
            if (o(data.elem).parents('#tree-table1').length) {
                var text = [];
                o(data.elem).parents('#tree-table1').find('.cbx.layui-form-checked').each(function () {
                    o(this).parents('[data-pid]').length && text.push(o(this).parents('td').next().find('span').text());
                })
                o(data.elem).parents('#tree-table1').prev().find('input').val(text.join(','));
            }
            layer.msg(JSON.stringify(data));
        })
        
        // 获取选中值，返回值是一个数组（定义的primary_key参数集合）
        o('.get-checked').click(function () {
            //layer.msg('选中参数' + treeTable.checked(re).join(','))
        })
        // 刷新重载树表（一般在异步处理数据后刷新显示）
        o('.refresh').click(function () {
            re.data.push({ "id": 50, "pid": 0, "title": "1-4" }, { "id": 51, "pid": 50, "title": "1-4-1" });
            treeTable.render(re);
        })
        o('.get-checked').click(function () {
            layer.msg('选中参数' + treeTable.checked(re).join(','))
        })
         o('#toolbar a').click(function (e) {
             debugger;
        })
       
    })
</script>


