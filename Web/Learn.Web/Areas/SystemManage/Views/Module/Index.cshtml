
@{
    ViewBag.Title = "系统功能";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<div class="layui-fluid">
    <div class="layui-card">
        @*<div class="layui-form layui-card-header layuiadmin-card-header-auto">
            <div class="layui-form-item">
                <div class="layui-inline">
                    筛选
                </div>
                <div class="layui-inline">
                    <select name="rolename" lay-filter="LAY-user-adminrole-type">
                        <option value="-1">全部角色</option>
                        <option value="0">管理员</option>
                    </select>
                </div>
            </div>
        </div>*@
        <div class="layui-card-body">
            <div id="toolbar" style="padding-bottom: 10px;"> 
                <a class="layui-btn layui-btn-sm"  lay-event="add"><i class="layui-icon layui-icon-add-1"></i>添加</a>
                <a class="layui-btn layui-btn-sm layui-btn-normal"  lay-event="edit"><i class="layui-icon layui-icon-edit"></i>编辑</a>
                <a class="layui-btn layui-btn-sm layui-btn-danger"  lay-event="delete"><i class="layui-icon layui-icon-delete"></i>删除</a>
            </div>

            <table class="layui-table layui-form" id="tree-table" lay-size="sm"></table> 
            
        </div>
    </div>
</div>
<script type="text/javascript">
    layui.extend({
        treeTable: '/lib/layui-extend/tableTree/treeTable'
    }).use(['treeTable', 'layer', 'code', 'form'], function () {
        var o = layui.$,
            form = layui.form,
            layer = layui.layer,
            treeTable = layui.treeTable;
        var re = treeTable.render({
            elem: '#tree-table',
            url:"/SystemManage/Module/GetListJson",
            icon_key: 'title',
            is_checkbox: true,
            end: function (e) {
                form.render();
            }
           ,limit: 30
           ,toolbar: '#toolbar',
            defaultToolbar: ['filter', 'exports', 'print', {
                title: '帮助'
                , layEvent: 'LAYTABLE_TIPS'
                , icon: 'layui-icon-tips'
            }],
            cols: [
                {
                    key: 'title',
                    title: '名称',
                    width: '100px',
                    template: function (item) {
                        if (item.level == 0) {
                            return '<span style="color:red;">' + item.title + '</span>';
                        } else if (item.level == 1) {
                            return '<span style="color:green;">' + item.title + '</span>';
                        } else if (item.level == 2) {
                            return '<span style="color:#aaa;">' + item.title + '</span>';
                        }
                    }
                },
                {
                    key: 'id',
                    title: 'ID',
                    width: '100px',
                    align: 'center',
                },
                {
                    key: 'pid',
                    title: '父ID',
                    width: '100px',
                    align: 'center',
                },
                {
                    title: '开关',
                    width: '100px',
                    align: 'center',
                    template: function (item) {
                        return '<input type="checkbox" name="close" lay-skin="switch" lay-text="ON|OFF">';
                    }
                },
                {
                    title: '操作',
                    align: 'center',
                    template: function (item) {
                        return '<a lay-filter="add">添加</a> | <a target="_blank" href="/detail?id=' + item.id + '">编辑</a>';
                    }
                }
            ]
        });
        treeTable.render({
            elem: '#tree-table1',
            url:"/SystemManage/Module/GetListJson",
            icon_key: 'title',
            is_checkbox: true,
            cols: [
                {
                    key: 'title',
                    title: '名称',
                    width: '100px',
                    template: function (item) {
                        if (item.level == 0) {
                            return '<span style="color:red;">' + item.title + '</span>';
                        } else if (item.level == 1) {
                            return '<span style="color:green;">' + item.title + '</span>';
                        } else if (item.level == 2) {
                            return '<span style="color:#aaa;">' + item.title + '</span>';
                        }
                    }
                },
                {
                    key: 'id',
                    title: 'ID',
                    width: '100px',
                    align: 'center',
                },
                {
                    key: 'pid',
                    title: '父ID',
                    width: '100px',
                    align: 'center',
                },
            ]
        });
        treeTable.render({
            elem: '#tree',
            url:"/SystemManage/Module/GetListJson",
            icon_key: 'title',
            is_checkbox: true,
            icon: {
                open: 'layui-icon layui-icon-rate',
                close: 'layui-icon layui-icon-rate-solid',
                left: 16,
            },
            cols: [
                {
                    key: 'title',
                    title: '名称',
                },
            ]
        });
        treeTable.render({
            elem: '#tree1',
            url: './data/table-tree.json',
            icon_key: 'title',
            cols: [
                {
                    key: 'title',
                    title: '名称',
                },
            ]
        });
        // 监听展开关闭
        treeTable.on('tree(flex)', function (data) {
            layer.msg(JSON.stringify(data));
        })
        // 监听checkbox选择
        treeTable.on('tree(box)', function (data) {
            if (o(data.elem).parents('#tree-table1').length) {
                var text = [];
                o(data.elem).parents('#tree-table1').find('.cbx.layui-form-checked').each(function () {
                    o(this).parents('[data-pid]').length && text.push(o(this).parents('td').next().find('span').text());
                })
                o(data.elem).parents('#tree-table1').prev().find('input').val(text.join(','));
            }
            layer.msg(JSON.stringify(data));
        })
        // 监听自定义
        treeTable.on('tree(add)', function (data) {
            layer.msg(JSON.stringify(data));
        })
        // 获取选中值，返回值是一个数组（定义的primary_key参数集合）
        o('.get-checked').click(function () {
            layer.msg('选中参数' + treeTable.checked(re).join(','))
        })
        // 刷新重载树表（一般在异步处理数据后刷新显示）
        o('.refresh').click(function () {
            re.data.push({ "id": 50, "pid": 0, "title": "1-4" }, { "id": 51, "pid": 50, "title": "1-4-1" });
            treeTable.render(re);
        })
        // 全部展开
        o('.open-all').click(function () {
            treeTable.openAll(re);
        })
        // 全部关闭
        o('.close-all').click(function () {
            treeTable.closeAll(re);
        })
        o('#tree1').on('click', '[data-down]', function () {
            o(this).find('span').length && o(this).parents('.layui-unselect').find('input').val(o(this).text());
        })
        o('.layui-select-title').click(function () {
            o(this).parent().hasClass('layui-form-selected') ? o(this).next().hide() : o(this).next().show(), o(this).parent().toggleClass('layui-form-selected');
        })
        o(document).on("click", function (i) {
            !o(i.target).parent().hasClass('layui-select-title') && !o(i.target).parents('table').length && !(!o(i.target).parents('table').length && o(i.target).hasClass('layui-icon')) && o(".layui-form-select").removeClass("layui-form-selected").find('.layui-anim').hide();
        })
    })
</script>


